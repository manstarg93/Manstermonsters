{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Dropbox/Mac/Documents/samsimon/Manstermonsters/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [monsters, setMonsters] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setMonsters(users));\n  }, []);\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchValue);\n    });\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchValue]);\n\n  const onSearchChange = event => {\n    const searchValues = event.target.value.toLowerCase();\n    setSearchValue(searchValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Manster Monsters!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChangeHandler: onSearchChange,\n      placeholder: \"search monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rM/6b7/JWBeq3UH4NuzX3LWoO3Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sam/Dropbox/Mac/Documents/samsimon/Manstermonsters/src/App.js"],"names":["useEffect","useState","CardList","SearchBox","App","monsters","setMonsters","searchValue","setSearchValue","filteredMonsters","setFilteredMonsters","fetch","then","response","json","users","newFilteredMonsters","filter","monster","name","toLowerCase","includes","onSearchChange","event","searchValues","target","value"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEM,WAAF,EAAeC,cAAf,IAAiCP,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAK,CAACQ,gBAAD,EAAmBC,mBAAnB,IAAwCT,QAAQ,CAACI,QAAD,CAArD;AAGAL,EAAAA,SAAS,CAAC,MAAM;AAEhBW,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEMG,KAAK,IAAIT,WAAW,CAACS,KAAD,CAF1B;AAGC,GALQ,EAKP,EALO,CAAT;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,mBAAmB,GAAGX,QAAQ,CAACY,MAAT,CAAiBC,OAAD,IAAa;AACvD,aAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAApC,CAAP;AACD,KAF2B,CAA5B;AAGAG,IAAAA,mBAAmB,CAACM,mBAAD,CAAnB;AAED,GANQ,EAMP,CAACX,QAAD,EAAUE,WAAV,CANO,CAAT;;AAUF,QAAMe,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,WAAnB,EAArB;AAEAZ,IAAAA,cAAc,CAACgB,YAAD,CAAd;AAED,GALD;;AAYE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAGH,QAAC,SAAD;AACA,MAAA,SAAS,EAAC,qBADV;AAEA,MAAA,eAAe,EAAEF,cAFjB;AAGA,MAAA,WAAW,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,YAHG,eAaJ,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEb;AAApB;AAAA;AAAA;AAAA;AAAA,YAbI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtDD;;GAAML,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box-component';\n\n\nconst App = () => {\n\n  const [monsters, setMonsters] = useState([])\n  const [ searchValue, setSearchValue] = useState('')\n  const[filteredMonsters, setFilteredMonsters]=useState(monsters)\n  \n\n  useEffect(() => {\n\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then((response) => response.json())\n  .then(users => setMonsters(users))\n  },[])\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchValue)\n    })\n    setFilteredMonsters(newFilteredMonsters)\n   \n  },[monsters,searchValue])\n\n\n\nconst onSearchChange = (event) => {\n  const searchValues = event.target.value.toLowerCase()\n \n  setSearchValue(searchValues)\n\n}\n\n\n\n\n\n    \n  return(\n    <div className=\"App\">\n    <h1 className='app-title'>Manster Monsters!</h1>\n\n <SearchBox \n className='monsters-search-box' \n onChangeHandler={onSearchChange} \n placeholder='search monsters'\n\n />\n\n\n\n\n<CardList monsters={filteredMonsters}/>\n\n</div>\n  )\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}